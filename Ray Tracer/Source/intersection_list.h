/******************************************************************************************************
 * Pragma
 ******************************************************************************************************/

#pragma once

/******************************************************************************************************
 * Include
 ******************************************************************************************************/

#include <algorithm>
#include <functional>
#include "intersection.h"
#include <limits>
#include "object.h"
#include <vector>

/******************************************************************************************************
 * Namespace
 ******************************************************************************************************/

namespace RayTracer
{
    /******************************************************************************************************
     * Class
     ******************************************************************************************************/

    class IntersectionList
    {
        private:
            /*** Method ***/
            void sort(const int Index);

        public:
            /*** Method ***/
            void add(const Intersection& I);
            bool hit(const double MinimumT, Intersection& intersection);

            /*** Operator ***/
            Intersection& operator[](const int Index);

            /*** Variable ***/
            std::vector<Intersection> list;
    };
}
